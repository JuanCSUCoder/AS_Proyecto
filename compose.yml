version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
  pedidos:
    ports:
      - 5010:9080
    build:
      context: ./microservices/mas-10-gestion-pedidos/
      dockerfile: Dockerfile
  compras:
    ports:
      - 5011:9080
    build:
      context: ./microservices/ms9-gestioncompras/
      dockerfile: Dockerfile
  usuarios:
    ports:
      - 5007:9080
    build:
      context: ./microservices/ms7-gestionusuarios/
      dockerfile: Dockerfile
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    ports:
      - 5672:5672
      - 15672:15672
  cockroachdb:
    image: cockroachdb/cockroach
    restart: always
    ports:
      - "26257:26257"
      - "8070:8080"
    expose:
      - 26257
    command: start-single-node --insecure
    # volumes:
    #   - ./microservices/data_init/test_sql:/docker-entrypoint-initdb.d
    # db_init:
    #   build:
    #     context: ./data_init
    #     dockerfile: Dockerfile
    #   restart: on-failure
    #   environment:
    #     - DATABASE_URL=postgresql://root@cockroachdb:26257/db
    #   depends_on:
    #     - cockroachdb
  adminer:
    image: adminer
    ports:
      - 8081:8080
    restart: always
  ms12_datos_calificaciones:
    build:
      context: ./microservices/ms12_calificaciones
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - 5013:8080
    expose:
      - 8080
  ms14_datos_compra:
    build:
      context: ./microservices/ms14_datos_compra
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - 5015:8080
    expose:
      - 8080
  ms3_servcios_transporte:
    build:
      context: ./microservices/ms3_servicios_transporte
      dockerfile: dockerfile
    ports:
      - 5003:5003
    expose:
      - 8080
  ms11_gestion_usuarios:
    build:
      context: ./microservices/ms11_gestion_usuarios
      dockerfile: ./src/main/docker/Dockerfile.jvm
    ports:
      - 5012:8080
    expose:
      - 8080

volumes:
  grafana_data:
